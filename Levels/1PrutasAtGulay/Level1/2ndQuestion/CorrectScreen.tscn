[gd_scene load_steps=27 format=2]

[ext_resource path="res://Assets/GUI/Item2.png" type="Texture" id=1]
[ext_resource path="res://Assets/BoxesBanners/Box_Orange_Rounded.png" type="Texture" id=2]
[ext_resource path="res://Assets/UIElements/Item4.png" type="Texture" id=3]
[ext_resource path="res://Assets/UIIcons/Icon_Large_Star_WhiteOutline.png" type="Texture" id=4]
[ext_resource path="res://Assets/Fonts/Kaph-Regular.otf" type="DynamicFontData" id=5]
[ext_resource path="res://Assets/Fonts/therok-regular-400.otf" type="DynamicFontData" id=6]
[ext_resource path="res://Assets/GUI/IconButton_Large_Orange_Circle.png" type="Texture" id=7]
[ext_resource path="res://Assets/UIElements/Icon_Menu.png" type="Texture" id=8]
[ext_resource path="res://Assets/UIIcons/Icon_Small_Blank_Return.png" type="Texture" id=9]
[ext_resource path="res://Levels/1PrutasAtGulay/PrutasAtGulayLevel.tscn" type="PackedScene" id=11]
[ext_resource path="res://Assets/UIIcons/Icon_Large_StarGrey_WhiteOutline.png" type="Texture" id=12]

[sub_resource type="GDScript" id=19]
script/source = "extends Popup

#For the name
const USERNAME_FILE_PATH = \"user://settings/username.gmd\"

#For the Retry
const RETRY_ONCE_FILE_PATH = \"user://playerData/level1/retryOnce.gmd\"
const RETRY_TWICE_FILE_PATH = \"user://playerData/level1/retryTwice.gmd\"

#first Question
const MISTAKE_A1_FILE_PATH = \"user://playerData/level1/question1/mistakeA.gmd\"
const MISTAKE_C1_FILE_PATH = \"user://playerData/level1/question1/mistakeC.gmd\"

#Second Question
const MISTAKE_A2_FILE_PATH = \"user://playerData/level1/question2/mistakeA.gmd\"
const MISTAKE_B2_FILE_PATH = \"user://playerData/level1/question2/mistakeC.gmd\"

func _ready():
	var config = File.new()
	if config.open(USERNAME_FILE_PATH, File.READ) == OK:
		# Read the stored username from the file
		print(\"Reads GMD file\")
		var displayName = config.get_as_text()
		config.close()
		# Display the username in the label
		$'%username'.text = displayName
		$'%username0'.text = displayName
		print(\"Name Showed\")

#######################################
func starDisplay():
#=============================================================
	#Check if there's a retry: Retry 1 and Retry 2
	#Checks if this is the First Retry
	if hasRetryFileOnce() and not hasRetryFileTwice():
		$'%star2_2'.hide()
		print(\"Displays Two Stars\")
	else:
		print(\"Retry 1 Check Error\")
		
	#Checks if this is the Second Retry
	if hasRetryFileOnce() and hasRetryFileTwice():
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Star\")
	else:
		print('Retry 1 & 2 Check Error')
#=============================================================

#============================================================
	#Checks if there's mistake at 1st question: Wrong A1
	#Checks if there's mistake at 2nd question: Correct C
	
	#This is when the first Question is Wrong and the Second Question is Correct
	#Display Two Stars
	if hasMistakeAtFirstQuestionA1() and not hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Wrong - A1, Question 2 Correct - No A2\")
		$'%star2_2'.hide()
		print(\"Displays Two Stars\")
	
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Wrong - A1, Question 2 Correct - No A2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Star\")
	else:
		print('Display Error')
		
	#===========================================================================
	#This is when the first Question is Wrong and the Second Question is Correct
	#Display Two Stars
	if hasMistakeAtFirstQuestionA1() and not hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Wrong - A1, Question 2 Correct - No B2\")
		$'%star1_1'.hide()
		print(\"Displays Two Stars\")
	
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Wrong - A1, Question 2 Correct - No B2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Stars\")
		
	else:
		print('Display Error')
		
	#================================================================================
	
	#This is when the first Question is Wrong and the Second Question is Correct
	#Display Two Stars
	if hasMistakeAtFirstQuestionC1() and not hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Wrong - C1, Question 2 Correct - No A2\")
		$'%star1_1'.hide()
		print(\"Displays Two Stars\")
		
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionC1() and hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Wrong - C1, Question 2 Correct - No A2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Stars\")
		
	else:
		print('Display Error')
		
	#====================================================================================
		
	#This is when the first Question is Wrong and the Second Question is Correct
	#Display Two Stars
	if hasMistakeAtFirstQuestionC1() and not hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Wrong - C1, Question 2 Correct, No B2\")
		$'%star1_1'.hide()
		print(\"Displays Two Stars\")
	
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionC1() and hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Wrong - C1, Question 2 Correct, No B2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Stars\")
		
	else:
		print('Display Error')
		
	#==============================================================
	
	#This is when the first Question is Correct and the Second Question is Wrong
	#Display Two Stars
	if not hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Correct - No A1, Question 2 Wrong - A2\")
		$'%star1_1'.hide()
		print(\"Displays Two Stars\")
	
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Correct - No A1, Question 2 Wrong - A2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Stars\")
		
	else:
		print('Display Error')
		
	#=========================================================================
	
	#This is when the first Question is Correct and the Second Question is Wrong
	#Display Two Stars
	if not hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Correct - No A1, Question 2 Wrong - B2\")
		$'%star1_1'.hide()
		print(\"Displays Two Stars\")
	
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Correct - No A1, Question 2 Wrong - B2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Stars\")
		
	else:
		print('Display Error')
		
	#============================================================================
	
	#This is when the first Question is Correct and the Second Question is Wrong
	#Display Two Stars
	if not hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Correct - No A1, Question 2 Wrong - A2\")
		$'%star1_1'.hide()
		print(\"Displays Two Stars\")
	
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionA2():
		print(\"Question 1 Correct - No A1, Question 2 Wrong - A2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Stars\")
		
	else:
		print('Display Error')
		
	#===============================================================================
	
	#This is when the first Question is Correct and the Second Question is Wrong
	#Display Two Stars
	if not hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Correct - No C1, Question 2 Wrong - B2\")
		$'%star1_1'.hide()
		print(\"Displays Two Stars\")
	
	#This is when the first Question is Wrong and the Second Question is wrong
	#Display One Stars
	elif hasMistakeAtFirstQuestionA1() and hasMistakeAtSecondQuestionB2():
		print(\"Question 1 Correct - No C1, Question 2 Wrong - B2\")
		$'%star2_2'.hide()
		$'%star1_1'.hide()
		print(\"Displays One Stars\")
		
	else:
		print('Display Error')
		
	#============================================================================================
	

#First Question
#When Player choose A
func hasMistakeAtFirstQuestionA1():
	print(\"Checking Mistake Q1 file\")
	var misOnce = File.new()
	print(\"Mistake A1 File Exitst\")
	return misOnce.file_exists(MISTAKE_A1_FILE_PATH)
	
#When Player choose C
func hasMistakeAtFirstQuestionC1():
	print(\"Checking Mistake Q1 file\")
	var misOnce = File.new()
	print(\"Mistake C1 File Exitst\")
	return misOnce.file_exists(MISTAKE_C1_FILE_PATH)

#=========================================================================

#Second Question
#When Player choose A
func hasMistakeAtSecondQuestionA2():
	print(\"Checking Mistake Q2 file\")
	var misTwice = File.new()
	print(\"Mistake A2 File Exitst\")
	return misTwice.file_exists(MISTAKE_A2_FILE_PATH)
	
#When Player choose B
func hasMistakeAtSecondQuestionB2():
	print(\"Checking Mistake Q2 file\")
	var misTwice = File.new()
	print(\"Mistake B2 File Exitst\")
	return misTwice.file_exists(MISTAKE_B2_FILE_PATH)
	

###########################################
func _on_levels_pressed():
	#This will go straight to the main menu
	MenuClickSfxPlayer.play()
	$\"%PrutasAtGulay\".show()
	print(\"To Levels\")

func _on_retry_pressed() -> void:
	print(\"Going Back to Level1\")
	ScrollPop.play()
	yield(get_tree().create_timer(0.50), \"timeout\")
	var retryScene = get_tree().change_scene(\"res://Levels/1PrutasAtGulay/Level1/1stQuestion/Level_1Q1.tscn\")
	
	if hasRetryFileOnce() and not hasRetryFileTwice():
		createScriptOnce_file()
		deleteMistakes()
		print(\"Creating Once Retry File\")
		
	elif hasRetryFileOnce() and hasRetryFileTwice():
		createScriptTwice_file()
		deleteMistakes()
		print(\"Creating Twice Retry File\")
		
	else:
		print(\"No Retries has Happened\")
	

#This is for CHECKING of the retry script file, No. of Retries: 1
func hasRetryFileOnce():
	print(\"Checking Retry Once file\")
	var configOnce = File.new()
	print(\"Retry File Exitst\")
	return configOnce.file_exists(RETRY_ONCE_FILE_PATH)
	
#This is for CHECKING of the retry script file, No. of Retries: 1
func hasRetryFileTwice():
	print(\"Checking Retry Once file\")
	var configTwice = File.new()
	print(\"Retry File Exitst\")
	return configTwice.file_exists(RETRY_TWICE_FILE_PATH)
	
#This is for CREATION of the retry script file, No. of Retries: 1
func createScriptOnce_file():
	var retryCreate1 = File.new()
	if retryCreate1.open(RETRY_ONCE_FILE_PATH, File.WRITE) == OK:
	# Writes a number inside the Retry File, Retry 1
		retryCreate1.store_string(\"Retries:\" + \"1\")
		retryCreate1.close()
		print(\"Retry Once File Saved\")
		
	else:
		print(\"Retry 1 Creation Error\")
		
#This is for CREATION of the retry script file, No. of Retries: 1
func createScriptTwice_file():
	var retryCreate2 = File.new()
	if retryCreate2.open(RETRY_TWICE_FILE_PATH, File.WRITE) == OK:
	# Writes a number inside the Retry File, Retry 2
		retryCreate2.store_string(\"Retries:\" + \"2\")
		retryCreate2.close()
		print(\"Retry Twice File Saved\")
		
	else:
		print('Retry 2 Creation Error ')
		
	
func deleteMistakes():
	var removeMistakes = File.new()
	removeMistakes.remove(\"user://playerData/level1/2ndQuestion/mistakeA2.gmd\")
	removeMistakes.remove(\"user://playerData/level1/2ndquestion/mistakeB2.gmd\")
	removeMistakes.remove(\"user://playerData/level1/1stQuestion/mistakeA1.gmd\")
	removeMistakes.remove(\"user://playerData/level1/1stQuestion/mistakeC1.gmd\")
	print(\"Deletes all the Mistake Files..\")
"

[sub_resource type="DynamicFont" id=11]
size = 30
outline_size = 2
outline_color = Color( 0.776471, 0.776471, 0.776471, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=12]
size = 30
outline_size = 2
outline_color = Color( 0.776471, 0.776471, 0.776471, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=13]
size = 30
outline_size = 2
outline_color = Color( 0.235294, 0.235294, 0.235294, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=14]
size = 30
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=15]
size = 30
outline_size = 2
outline_color = Color( 0.235294, 0.235294, 0.235294, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=16]
size = 30
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=17]
size = 40
outline_size = 2
outline_color = Color( 0.313726, 0.027451, 0.0627451, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=18]
size = 40
outline_size = 1
outline_color = Color( 0.266667, 0.266667, 0.266667, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=5]
size = 27
outline_size = 2
outline_color = Color( 0.235294, 0.235294, 0.235294, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=6]
size = 27
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=9]
size = 23
outline_size = 2
outline_color = Color( 0.313726, 0.027451, 0.0627451, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=10]
size = 23
outline_size = 1
outline_color = Color( 0.266667, 0.266667, 0.266667, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=7]
size = 23
outline_size = 2
outline_color = Color( 0.313726, 0.027451, 0.0627451, 1 )
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=8]
size = 23
outline_size = 1
outline_color = Color( 0.266667, 0.266667, 0.266667, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 5 )
fallback/0 = ExtResource( 6 )

[node name="DisplayStars" type="Popup"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 19 )
__meta__ = {
"_edit_lock_": true
}

[node name="Panel" type="Panel" parent="."]
self_modulate = Color( 1, 1, 1, 0.32549 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true
}

[node name="panelRetry" type="TextureRect" parent="Panel"]
anchor_left = 0.197266
anchor_top = 0.065
anchor_right = 0.761719
anchor_bottom = 0.93
texture = ExtResource( 2 )
expand = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="banner2" type="TextureRect" parent="Panel"]
anchor_left = 0.22168
anchor_top = 0.0633333
anchor_right = 0.736328
anchor_bottom = 0.225
texture = ExtResource( 1 )
expand = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="ribbon" type="TextureRect" parent="Panel"]
anchor_left = 0.228516
anchor_top = 0.015
anchor_right = 0.729492
anchor_bottom = 0.235
texture = ExtResource( 3 )
expand = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="gameCorrect1" type="Label" parent="Panel/ribbon"]
anchor_left = 0.116958
anchor_top = 0.136364
anchor_right = 0.508772
anchor_bottom = 0.621212
rect_rotation = -3.0
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 11 )
text = "congrat"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="gameCorrect3" type="Label" parent="Panel/ribbon"]
anchor_left = 0.483431
anchor_top = 0.0606061
anchor_right = 0.875244
anchor_bottom = 0.545455
rect_rotation = 4.0
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 12 )
text = "ulations"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="gameCorrect2" type="Label" parent="Panel/ribbon"]
anchor_left = 0.116958
anchor_top = 0.19697
anchor_right = 0.51267
anchor_bottom = 0.530303
rect_rotation = -3.0
custom_colors/font_color = Color( 0.886275, 0.317647, 0.27451, 1 )
custom_colors/font_color_shadow = Color( 0.580392, 0.247059, 0.286275, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 13 )
text = "congrat"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="gameCorrect3" type="Label" parent="Panel/ribbon/gameCorrect2"]
anchor_left = -0.00106838
anchor_top = -0.0491803
anchor_right = 0.998932
anchor_bottom = 0.95082
custom_colors/font_color = Color( 1, 0.643137, 0.215686, 1 )
custom_constants/shadow_offset_x = 3
custom_constants/shadow_offset_y = 5
custom_fonts/font = SubResource( 14 )
text = "congrat"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="gameCorrect4" type="Label" parent="Panel/ribbon"]
anchor_left = 0.475633
anchor_top = 0.121212
anchor_right = 0.870232
anchor_bottom = 0.562596
margin_right = 3.57111
margin_bottom = -14.2626
rect_rotation = 4.0
custom_colors/font_color = Color( 0.886275, 0.317647, 0.27451, 1 )
custom_colors/font_color_shadow = Color( 0.580392, 0.247059, 0.286275, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 15 )
text = "ulations"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="gameCorrect3" type="Label" parent="Panel/ribbon/gameCorrect4"]
anchor_left = -0.00106838
anchor_top = -0.0491803
anchor_right = 0.998932
anchor_bottom = 0.95082
custom_colors/font_color = Color( 1, 0.643137, 0.215686, 1 )
custom_constants/shadow_offset_x = 3
custom_constants/shadow_offset_y = 5
custom_fonts/font = SubResource( 16 )
text = "ulations"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="star1" type="TextureRect" parent="Panel"]
margin_left = 439.0
margin_top = 74.0
margin_right = 543.0
margin_bottom = 167.0
texture = ExtResource( 12 )
expand = true
__meta__ = {
"_edit_lock_": true
}

[node name="star1_1" type="TextureRect" parent="Panel/star1"]
unique_name_in_owner = true
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 4 )
expand = true
__meta__ = {
"_edit_lock_": true
}

[node name="star2" type="TextureRect" parent="Panel"]
margin_left = 540.0
margin_top = 102.0
margin_right = 618.0
margin_bottom = 172.0
texture = ExtResource( 12 )
expand = true
__meta__ = {
"_edit_lock_": true
}

[node name="star2_2" type="TextureRect" parent="Panel/star2"]
unique_name_in_owner = true
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 4 )
expand = true
__meta__ = {
"_edit_lock_": true
}

[node name="star3" type="TextureRect" parent="Panel"]
margin_left = 363.0
margin_top = 101.0
margin_right = 441.0
margin_bottom = 171.0
texture = ExtResource( 12 )
expand = true
__meta__ = {
"_edit_lock_": true
}

[node name="star3_3" type="TextureRect" parent="Panel/star3"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 4 )
expand = true
__meta__ = {
"_edit_lock_": true
}

[node name="applause" type="Label" parent="."]
anchor_left = 0.264648
anchor_top = 0.298333
anchor_right = 0.704101
anchor_bottom = 0.428333
custom_colors/font_color = Color( 0.886275, 0.317647, 0.27451, 1 )
custom_colors/font_color_shadow = Color( 0.580392, 0.247059, 0.286275, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 17 )
text = "Binabati kita!"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="applause" type="Label" parent="applause"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -1.0
custom_colors/font_color = Color( 1, 0.643137, 0.215686, 1 )
custom_constants/shadow_offset_x = 3
custom_constants/shadow_offset_y = 5
custom_fonts/font = SubResource( 18 )
text = "binabati kita!"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true
}

[node name="username" type="Label" parent="."]
unique_name_in_owner = true
anchor_left = 0.290039
anchor_top = 0.423333
anchor_right = 0.674805
anchor_bottom = 0.488333
custom_colors/font_color = Color( 0.886275, 0.317647, 0.27451, 1 )
custom_colors/font_color_shadow = Color( 0.580392, 0.247059, 0.286275, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 5 )
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="username0" type="Label" parent="username"]
unique_name_in_owner = true
anchor_left = -0.00106838
anchor_top = -0.0491803
anchor_right = 0.998932
anchor_bottom = 0.95082
custom_colors/font_color = Color( 1, 0.643137, 0.215686, 1 )
custom_constants/shadow_offset_x = 3
custom_constants/shadow_offset_y = 5
custom_fonts/font = SubResource( 6 )
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="HSeparator" type="HSeparator" parent="."]
anchor_left = 0.287109
anchor_top = 0.485
anchor_right = 0.675781
anchor_bottom = 0.495
margin_top = 3.05176e-05
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="theLevels" type="Label" parent="."]
anchor_left = 0.280273
anchor_top = 0.576667
anchor_right = 0.472656
anchor_bottom = 0.643333
custom_colors/font_color = Color( 0.886275, 0.317647, 0.27451, 1 )
custom_colors/font_color_shadow = Color( 0.580392, 0.247059, 0.286275, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 9 )
text = "Mga Levels"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="levelLabel" type="Label" parent="theLevels"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -1.0
custom_colors/font_color = Color( 1, 0.643137, 0.215686, 1 )
custom_constants/shadow_offset_x = 3
custom_constants/shadow_offset_y = 5
custom_fonts/font = SubResource( 10 )
text = "mga levels"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true
}

[node name="theRetry" type="Label" parent="."]
anchor_left = 0.488281
anchor_top = 0.583333
anchor_right = 0.689453
anchor_bottom = 0.639999
custom_colors/font_color = Color( 0.886275, 0.317647, 0.27451, 1 )
custom_colors/font_color_shadow = Color( 0.580392, 0.247059, 0.286275, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/shadow_offset_y = 4
custom_fonts/font = SubResource( 7 )
text = "umulit"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="theRetry" type="Label" parent="theRetry"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -1.0
custom_colors/font_color = Color( 1, 0.643137, 0.215686, 1 )
custom_constants/shadow_offset_x = 3
custom_constants/shadow_offset_y = 5
custom_fonts/font = SubResource( 8 )
text = "Umulit"
align = 1
valign = 1
autowrap = true
clip_text = true
uppercase = true
__meta__ = {
"_edit_lock_": true
}

[node name="levelPanel" type="HBoxContainer" parent="."]
anchor_left = 0.30957
anchor_top = 0.646667
anchor_right = 0.651367
anchor_bottom = 0.840001
custom_constants/separation = 120
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="goLevels" type="TextureRect" parent="levelPanel"]
margin_right = 115.0
margin_bottom = 116.0
rect_min_size = Vector2( 115, 116 )
texture = ExtResource( 7 )
expand = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="levels" type="Button" parent="levelPanel/goLevels"]
anchor_left = 0.130439
anchor_top = 0.189657
anchor_right = 0.878265
anchor_bottom = 0.818967
focus_mode = 0
enabled_focus_mode = 0
icon = ExtResource( 8 )
flat = true
icon_align = 1
expand_icon = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="goRetry" type="TextureRect" parent="levelPanel"]
margin_left = 235.0
margin_right = 350.0
margin_bottom = 116.0
rect_min_size = Vector2( 115, 116 )
texture = ExtResource( 7 )
expand = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="retry" type="Button" parent="levelPanel/goRetry"]
anchor_left = 0.130437
anchor_top = 0.120688
anchor_right = 0.878264
anchor_bottom = 0.862067
focus_mode = 0
enabled_focus_mode = 0
icon = ExtResource( 9 )
flat = true
icon_align = 1
expand_icon = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="PrutasAtGulay" parent="." instance=ExtResource( 11 )]
unique_name_in_owner = true

[connection signal="pressed" from="levelPanel/goLevels/levels" to="." method="_on_levels_pressed"]
[connection signal="pressed" from="levelPanel/goRetry/retry" to="." method="_on_retry_pressed"]
